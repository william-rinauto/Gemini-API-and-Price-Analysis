day_close1 <- day_close %>%
mutate_at(contains_close = lead(Close,1))
day_close1 <- day_close %>%
mutate_at(vars(contains('Close')) = lead(Close,1))
day_close1 <- day_close %>%
mutate_at(vars(contains('Close')), lead(Close,1))
day_close1 <- day_close %>%
mutate_at(vars(contains('Close')), list(yesterday = lead1))
lead1 <- function(x) lead(x,1)
day_close1 <- day_close %>%
mutate_at(vars(contains('Close')), list(yesterday = lead1))
head(day_close1)
names(day_close1)
day_close1 <- day_close %>%
mutate_at(vars(contains('Close')), list(yesterday = lead1)) %>%
mutate_at(vars(contains('Close')), list(closed_diff = close_diff))
close_diff <- function(x) x - lead(x,1)
lead1 <- function(x) lead(x,1)
day_close1 <- day_close %>%
mutate_at(vars(contains('Close')), list(yesterday = lead1)) %>%
mutate_at(vars(contains('Close')), list(closed_diff = close_diff))
head(day_close1)
dim(day_close1)
leads <- 1:100
for(i in leads) {
day_close[[paste0('lead_',i)]] <- lead(day_close$Close,i)
}
names(day_close1)
leads <- 1:100
for(i in leads) {
day_close1[[paste0('lead_',i)]] <- lead(day_close1$Close,i)
}
names(day_close1)
model <- day_close %>%
mutate(gain = Close - lead_1) %>%
select(gain, starts_with("lead_"), starts_with('moving_'), contains("_yesterday"))
head(model)
dim(model)
h2o.init(
nthreads = -1,
max_mem_size = "50g"
)
h2o.removeAll()
h2o_model <- as.h2o(model)
split <- h2o.splitFrame(
h2o_model,
c(.6,.2),
seed = 123
)
train <- h2o.assign(split[[1]], 'train')
valid <- h2o.assign(split[[2]], 'valid')
test <- h2o.assign(split[[3]], 'test')
gbm_model <- h2o.gbm(
training_frame = train,
validation_frame = valid,
x = 2:ncol(train),
model_id = "gbm_covType1",     ## name the model in H2O
y = 1,
seed = 123)
summary(gbm_model)
test1 <- h2o.predict(
gbm_model,
test
)
test2 <- test
test2$output <- test1
test2 <- as_tibble(test2) %>%
mutate(sign_match = case_when(gain < 0 & output < 0 ~ 1,
gain > 0 & output > 0 ~ 1,
T ~ 0))
head(test2)
test1
test2 <- test
test2$prediction <- test1
test2 <- as_tibble(test2) %>%
mutate(sign_match = case_when(gain < 0 & prediction < 0 ~ 1,
gain > 0 & prediction > 0 ~ 1,
T ~ 0))
direction_match_rate <- mean(test2$sign_match)
direction_match_rate
?h2o.gbm
gbm_model <- h2o.gbm(
training_frame = train,
validation_frame = valid,
x = 2:ncol(train),
model_id = "gbm_covType1",     ## name the model in H2O
y = 1,
learn_rate = .2,
max_depth = 10,
seed = 123)
summary(gbm_model)
test1 <- h2o.predict(
gbm_model,
test
)
test2 <- test
test2$prediction <- test1
test2 <- as_tibble(test2) %>%
mutate(sign_match = case_when(gain < 0 & prediction < 0 ~ 1,
gain > 0 & prediction > 0 ~ 1,
T ~ 0))
direction_match_rate <- mean(test2$sign_match)
direction_match_rate
df <- h2o.importFile(path = normalizePath("../data/covtype.full.csv"))
?h2o.hit_ratio_table
gbm_model <- h2o.gbm(
training_frame = train,
validation_frame = valid,
x = 2:ncol(train),
y = 1,
ntrees = 75,
learn_rate = .3,
sample_rate = 0.7,
col_sample_rate = 0.7,
stopping_rounds = 2,
stopping_tolerance = 0.01,
score_each_iteration = T,
max_depth = 10,
seed = 123)
summary(gbm_model)
test1 <- h2o.predict(
gbm_model,
test
)
test2 <- test
test2$prediction <- test1
test2 <- as_tibble(test2) %>%
mutate(sign_match = case_when(gain < 0 & prediction < 0 ~ 1,
gain > 0 & prediction > 0 ~ 1,
T ~ 0))
direction_match_rate <- mean(test2$sign_match)
direction_match_rate
gbm_model <- h2o.gbm(
training_frame = train,
validation_frame = valid,
x = 2:ncol(train),
y = 1,
ntrees = 75,
learn_rate = .3,
sample_rate = 0.9,
col_sample_rate = 0.9,
stopping_rounds = 2,
stopping_tolerance = 0.01,
score_each_iteration = T,
max_depth = 10,
seed = 123)
summary(gbm_model)
test1 <- h2o.predict(
gbm_model,
test
)
test2 <- test
test2$prediction <- test1
test2 <- as_tibble(test2) %>%
mutate(sign_match = case_when(gain < 0 & prediction < 0 ~ 1,
gain > 0 & prediction > 0 ~ 1,
T ~ 0))
direction_match_rate <- mean(test2$sign_match)
direction_match_rate
gbm_model <- h2o.gbm(
training_frame = train,
validation_frame = valid,
x = 2:ncol(train),
model_id = "gbm_covType1",     ## name the model in H2O
y = 1,
learn_rate = .2,
max_depth = 10,
seed = 123)
summary(gbm_model)
test2 <- test
test2$prediction <- test1
test1 <- h2o.predict(
gbm_model,
test
)
test2 <- as_tibble(test2) %>%
mutate(sign_match = case_when(gain < 0 & prediction < 0 ~ 1,
gain > 0 & prediction > 0 ~ 1,
T ~ 0))
direction_match_rate <- mean(test2$sign_match)
direction_match_rate
gbm_model <- h2o.gbm(
training_frame = train,
validation_frame = valid,
x = 2:ncol(train),
model_id = "gbm_covType1",     ## name the model in H2O
y = 1,
learn_rate = .2,
max_depth = 10,
seed = 123)
summary(gbm_model)
test1 <- h2o.predict(
gbm_model,
test
)
test2 <- test
test2$prediction <- test1
test2 <- as_tibble(test2) %>%
mutate(sign_match = case_when(gain < 0 & prediction < 0 ~ 1,
gain > 0 & prediction > 0 ~ 1,
T ~ 0))
direction_match_rate <- mean(test2$sign_match)
direction_match_rate
head(train)
gbm_model <- h2o.gbm(
training_frame = train,
validation_frame = valid,
x = 2:ncol(train),
model_id = "gbm_covType1",     ## name the model in H2O
y = 1,
learn_rate = .5,
max_depth = 15,
seed = 123)
summary(gbm_model)
test2 <- test
test2$prediction <- test1
test1 <- h2o.predict(
gbm_model,
test
)
test2 <- as_tibble(test2) %>%
mutate(sign_match = case_when(gain < 0 & prediction < 0 ~ 1,
gain > 0 & prediction > 0 ~ 1,
T ~ 0))
direction_match_rate <- mean(test2$sign_match)
direction_match_rate
gbm_model <- h2o.gbm(
training_frame = train,
validation_frame = valid,
x = 2:ncol(train),
model_id = "gbm_covType1",     ## name the model in H2O
y = 1,
learn_rate = .9,
max_depth = 50,
seed = 123)
summary(gbm_model)
test1 <- h2o.predict(
gbm_model,
test
)
test2 <- test
test2$prediction <- test1
test2 <- as_tibble(test2) %>%
mutate(sign_match = case_when(gain < 0 & prediction < 0 ~ 1,
gain > 0 & prediction > 0 ~ 1,
T ~ 0))
direction_match_rate <- mean(test2$sign_match)
direction_match_rate
gbm_model <- h2o.gbm(
training_frame = train,
validation_frame = valid,
x = 2:ncol(train),
model_id = "gbm_covType1",     ## name the model in H2O
y = 1,
learn_rate = .2,
max_depth = 10,
seed = 123)
summary(gbm_model)
test2 <- test
test2$prediction <- test1
test1 <- h2o.predict(
gbm_model,
test
)
test2 <- as_tibble(test2) %>%
mutate(sign_match = case_when(gain < 0 & prediction < 0 ~ 1,
gain > 0 & prediction > 0 ~ 1,
T ~ 0))
direction_match_rate <- mean(test2$sign_match)
direction_match_rate
head(test2)
head(day_close)
model <- day_close %>%
mutate(gain = Close - lead_1) %>%
select(gain, data_date, starts_with("lead_"), starts_with('moving_'), contains("_yesterday"),)
range(model$data_date)
leave_out <- filter(model, data_date >= max(model$data_date)-150)
model1 <- anti_join(model, leave_out)
nrow(model1)
nrow(model)
1833+150
h2o_model <- as.h2o(model1)
split <- h2o.splitFrame(
h2o_model,
c(.6,.2),
seed = 123
)
train <- h2o.assign(split[[1]], 'train')
valid <- h2o.assign(split[[2]], 'valid')
test <- h2o.assign(split[[3]], 'test')
summary(gbm_model)
test2 <- test
gbm_model <- h2o.gbm(
training_frame = train,
validation_frame = valid,
x = 2:ncol(train),
model_id = "gbm_covType1",     ## name the model in H2O
y = 1,
seed = 123)
test1 <- h2o.predict(
gbm_model,
test
)
test2$prediction <- test1
direction_match_rate <- mean(test2$sign_match)
direction_match_rate
summary(gbm_model)
test2 <- test
test2$prediction <- test1
direction_match_rate <- mean(test2$sign_match)
direction_match_rate
test2 <- as_tibble(test2) %>%
mutate(sign_match = case_when(gain < 0 & prediction < 0 ~ 1,
gain > 0 & prediction > 0 ~ 1,
T ~ 0))
gbm_model <- h2o.gbm(
training_frame = train,
validation_frame = valid,
x = 2:ncol(train),
model_id = "gbm_covType1",     ## name the model in H2O
y = 1,
learn_rate = .2,
max_depth = 10,
seed = 123)
test1 <- h2o.predict(
gbm_model,
test
)
test2 <- as_tibble(test2) %>%
mutate(sign_match = case_when(gain < 0 & prediction < 0 ~ 1,
gain > 0 & prediction > 0 ~ 1,
T ~ 0))
direction_match_rate <- mean(test2$sign_match)
direction_match_rate
direction_match_rate <- mean(test2$sign_match)
direction_match_rate
gbm_model <- h2o.gbm(
training_frame = train,
validation_frame = valid,
x = 2:ncol(train),
model_id = "gbm_covType1",     ## name the model in H2O
y = 1,
learn_rate = .2,
max_depth = 10,
seed = 123)
summary(gbm_model)
test1 <- h2o.predict(
gbm_model,
test
)
test2 <- test
test2$prediction <- test1
test2 <- as_tibble(test2) %>%
mutate(sign_match = case_when(gain < 0 & prediction < 0 ~ 1,
gain > 0 & prediction > 0 ~ 1,
T ~ 0))
direction_match_rate <- mean(test2$sign_match)
direction_match_rate
out_test <- h2o.predict(
gbm_model,
leave_out
)
leave_out_h2o <- as.h2o(leave_out)
head(train)
gbm_model <- h2o.gbm(
training_frame = train,
validation_frame = valid,
x = 3:ncol(train),
model_id = "gbm_covType1",     ## name the model in H2O
y = 1,
learn_rate = .2,
max_depth = 10,
seed = 123)
summary(gbm_model)
test1 <- h2o.predict(
gbm_model,
test
)
test2 <- test
test2$prediction <- test1
test2 <- as_tibble(test2) %>%
mutate(sign_match = case_when(gain < 0 & prediction < 0 ~ 1,
gain > 0 & prediction > 0 ~ 1,
T ~ 0))
direction_match_rate <- mean(test2$sign_match)
direction_match_rate
out_test <- h2o.predict(
gbm_model,
leave_out_h2o
)
out_test
leave_out$predictions <- out_test
leave_out_h2o$predictions <- out_test
leave_out_pred <- as_tibble(leave_out_h2o) %>%
mutate(sign_match = case_when(gain < 0 & prediction < 0 ~ 1,
gain > 0 & prediction > 0 ~ 1,
T ~ 0))
leave_out_h2o$prediction <- out_test
leave_out_pred <- as_tibble(leave_out_h2o) %>%
mutate(sign_match = case_when(gain < 0 & prediction < 0 ~ 1,
gain > 0 & prediction > 0 ~ 1,
T ~ 0))
mean(leave_out_pred$sign_match)
head(max_date1)
nrow(max_date1)
max_date1 <- left_join(eth_only, no_eth)
#Trying with below line to keep data at the minute level
day_close <- max_date1
close_diff <- function(x) x - lead(x,1)
lead1 <- function(x) lead(x,1)
head(max_date1$datetime)
day_close1 <- day_close %>%
mutate_at(vars(contains('Close')), list(yesterday = lead1)) %>%
mutate_at(vars(contains('Close')), list(closed_diff = close_diff))
head(day_close1)
leads <- c(1:100, 200, 500, 1000)
for(i in leads) {
day_close1[[paste0('lead_',i)]] <- lead(day_close1$Close,i)
}
head(day_close)
names(day_close)
names(day_close1)
model <- day_close %>%
mutate(gain = Close - lead_1) %>%
select(gain, data_date, starts_with("lead_"), starts_with('moving_'), contains("_yesterday"),)
model <- day_close1 %>%
mutate(gain = Close - lead_1) %>%
select(gain, data_date, starts_with("lead_"), starts_with('moving_'), contains("_yesterday"),)
h2o.init(
nthreads = -1,
max_mem_size = "50g"
)
h2o.removeAll()
leave_out <- filter(model, data_date >= max(model$data_date)-150)
leave_out_h2o <- as.h2o(leave_out)
model1 <- anti_join(model, leave_out)
h2o_model <- as.h2o(model1)
split <- h2o.splitFrame(
h2o_model,
c(.6,.2),
seed = 123
)
train <- h2o.assign(split[[1]], 'train')
valid <- h2o.assign(split[[2]], 'valid')
test <- h2o.assign(split[[3]], 'test')
gbm_model <- h2o.gbm(
training_frame = train,
validation_frame = valid,
x = 3:ncol(train),
model_id = "gbm_covType1",     ## name the model in H2O
y = 1,
learn_rate = .2,
max_depth = 10,
seed = 123)
head(train)
model <- day_close1 %>%
ungroup() %>%
mutate(gain = Close - lead_1) %>%
select(gain, data_date, starts_with("lead_"), starts_with('moving_'), contains("_yesterday"),)
h2o.init(
nthreads = -1,
max_mem_size = "50g"
)
h2o.removeAll()
leave_out <- filter(model, data_date >= max(model$data_date)-150)
leave_out_h2o <- as.h2o(leave_out)
model1 <- anti_join(model, leave_out)
h2o_model <- as.h2o(model1)
split <- h2o.splitFrame(
h2o_model,
c(.6,.2),
seed = 123
)
train <- h2o.assign(split[[1]], 'train')
valid <- h2o.assign(split[[2]], 'valid')
test <- h2o.assign(split[[3]], 'test')
gbm_model <- h2o.gbm(
training_frame = train,
validation_frame = valid,
x = 3:ncol(train),
model_id = "gbm_covType1",     ## name the model in H2O
y = 1,
learn_rate = .2,
max_depth = 10,
seed = 123)
summary(gbm_model)
test1 <- h2o.predict(
gbm_model,
test
)
test2 <- test
test2$prediction <- test1
test2 <- as_tibble(test2) %>%
mutate(sign_match = case_when(gain < 0 & prediction < 0 ~ 1,
gain > 0 & prediction > 0 ~ 1,
T ~ 0))
direction_match_rate <- mean(test2$sign_match)
direction_match_rate
head(test2)
names(test2)
summary(test2$prediction)
summary(test2$gain)
out_test <- h2o.predict(
gbm_model,
leave_out_h2o
)
leave_out_h2o$prediction <- out_test
leave_out_pred <- as_tibble(leave_out_h2o) %>%
mutate(sign_match = case_when(gain < 0 & prediction < 0 ~ 1,
gain > 0 & prediction > 0 ~ 1,
T ~ 0))
mean(leave_out_pred$sign_match)
